function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 13-Jun-2018 12:34:24.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx12 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [1;1;1;1;1;1;1;1;1;1;1;1];
x1_step1.gain = [0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.8191891590429345449;-1.6107335370801041385;-1.4317917516842155745;-1.0927410209260777219;1.1059053791961797053;0.694644695143729618;0.60802047413867299497;0.27839845485645603462;-0.3638880176471743777;0.043337813788749068866;-0.21150503896682482097;-0.026133550184441411979;-0.3343812771605420564;0.61267546688503959906;-0.97318723435454379533;1.0299688139870566417;-1.246602376898165776;1.2458855257990868459;-1.6037686083945890125;1.8134584503242354714];
IW1_1 = [0.63794683403711871517 0.51085124119289215816 -0.18155116842821555911 -0.068489851300545426249 0.2964570205956862381 0.65064289366158756245 0.53521564009054178879 0.71880889218937182861 0.64168266719171451751 -0.53593759271757124285 0.68163430329109686578 -0.11945211478308877251;0.39197032249906099688 -0.11969536014540034519 0.58164588384182991376 -0.48582371311552052795 -0.059888924424433304106 0.60750686459869862599 0.20942264932523185772 0.67186183008696587216 -0.83898705364700876252 0.80941692166239065376 -0.44480655942422198112 0.19085374508611790967;0.69795231484243525077 0.37555425371583911476 -0.14050710722090040128 0.75472251938011081229 0.23913862568941798847 -0.47510244622174835349 0.5608227825467321237 0.014595482395250273383 -0.52648820380523397855 0.54757019671062379107 -0.69126594293223475596 0.54694731046467126578;0.16262112984519633274 0.35355113243618696561 0.00037582474984286518005 -0.81797923140034933809 0.0019446414349228030582 -0.57803767241165338042 0.45553497063273107326 -0.11248635635482062689 0.33044745874822867293 -1.0084606555683028883 -0.30129536767916376139 0.60624523899131665949;-0.5072340070546390578 0.039391963648015976274 0.05865620652916619937 -0.20594812991098432331 -0.65159073835587777435 0.47459134037221450964 -0.62219690023065843398 0.80280834309046245068 -0.81206884769174403349 -0.89224557172419760587 0.32939121309262692217 -0.37976071477989403746;-0.3630869862441745699 -0.018326598276169420165 0.79730693271478969564 0.22059198631073453911 0.77739916966755795436 0.4114565865918825005 0.07133696695209051919 0.67463830202180341544 0.85390728981953645249 -0.40034008862202569157 -0.074077613270244618837 -0.49355494501060592771;-0.86960082529223436953 0.47830754465000535625 0.70949167141239655177 -0.65884656206330527439 0.64376742293384603411 0.32823858359325014389 0.22931495061971229887 -0.17524139711536040886 0.43914882069384642005 -0.25804863212409862028 -0.20920145709404130985 -0.70342494262008092853;-0.14525480799202075688 0.040670040112125258047 0.16436765730169178301 0.1367049210314090768 -0.89841913878689894091 0.74738644540881771228 0.78324251205701134193 -0.78863130475418619092 -0.12752112643499793898 0.01161549863726025339 -0.78444835973459747791 -0.38605492958054915542;0.32391462446007679432 -0.5498528349561477846 0.42087897821431818901 -0.80558312041453461472 -0.58659728423852741663 -0.77791960590788522545 -0.52603625470170989331 -0.5486956618429221777 0.30306128479819349764 0.35231828587048580337 0.36049651444941088752 -0.062136125268443101466;0.596767642026975631 -0.55192627092793655752 0.43765132947936136176 0.88653023951101350697 0.34958482619707592631 -0.19285261438802087097 0.53034382977438065954 0.22590859388485301507 0.77224618494133867586 0.37108840370036139111 -0.53437944504817980196 0.44811694264744506011;-0.51652816827891634421 0.24354093505354548754 0.032352993047234455959 0.45034734849906105092 0.83434857977323295675 0.7583205206755343486 -0.66102477801036596539 -0.70174250871388987871 -0.40583283892184662811 0.14397842259796672648 -0.26872023802314637386 0.55999054689503424687;-0.44689950472641148949 0.025825008987980763164 -0.36370852943696929671 0.73821673758343708815 0.62306183720392194214 0.34576245425523688404 -0.37151974133888976404 0.5426037022516908559 -0.89825762519163898645 -0.1578815009085045018 0.068801690587086378192 0.68799534521084693139;-0.82502251238117252363 -0.36536346472299369159 0.21556205950406820415 -0.97277514144767263105 -0.60488846266788665051 0.2536629463316046329 0.34026616047712920921 -0.37699835088382294135 -0.55371089153047836628 0.34790613267600506431 0.35870234166740411208 0.4548584433286481099;0.66680952005798310722 0.11193760847069067488 0.47874198726560801553 0.63726311683766501126 -0.34373439987675979967 0.62444912256965667829 0.72391753251252555224 0.28513291222395986679 -0.19864939499375294796 -0.63047454082060394587 -0.64518772404666790976 -0.2293115659281644847;-0.17585911200417581046 -0.5284757901893760712 -0.084373711954496555254 0.35166232209041958789 -0.2249071933216362229 -0.93791841922388741182 0.83152477087287102187 -0.24904054138601053325 0.014140188717312637823 0.67894678419522513924 0.36386457984910292041 0.23690655783725744765;-0.11109970581207570528 0.30593378203666699022 0.34921447351630896527 -0.27376234380573249982 -0.10101289397671638082 0.6574740111503577511 -0.56036735414642302455 0.98324672849691063803 -0.3599799989684823176 -0.4966026135170144018 0.096280438471673557288 0.73594561732783259078;-0.020205674342487236345 -0.7926537724405888774 0.073490905058175029496 -0.1163133960910855691 0.3092048771645173888 -0.63075913050935605852 0.50195660946255116208 0.78202112105076138082 0.72940407445650379259 0.56708635887019231969 -0.53021876999947881171 -0.32273651181906537477;0.62153767474804988424 0.65267274393739194149 0.61366741437508998125 0.6957879027037815467 0.34714705138842177901 -0.7476910127087842417 -0.27988341517070480791 0.39829321211360146915 -0.23838882031619146318 0.24726343224997313075 0.54162694972071823152 0.88435870970246299727;-0.11263794376604446823 0.19387918584449947978 0.53895188800384519201 -0.70214066167400146501 -0.59458971636522184312 -0.45339889358094576099 0.094940573116165841161 -0.86005231785823033075 0.64476571307514107811 -0.20630826926898063189 -0.80693577506305591562 -0.041902274851445035775;0.22895556773659928029 -0.87449505262485338619 -0.37394229516494870147 -0.17159250416700194686 0.037947955214503663324 -0.37131398233244150564 -0.70004666964920647665 0.51573238892210238049 0.86753011857106399063 -0.16601509155534394102 0.034719152236031128322 -0.72530578562223257943];

% Layer 2
b2 = -0.31142623196319874079;
LW2_1 = [-0.32871430367698312169 -0.25227809749358065528 -0.22215107663067229504 0.13373514156151589116 -0.47871962558693492706 -0.44446220868438790497 -0.29265836700643294011 -0.32688769601738698611 -0.23328987432869402463 0.32500036651209124328 -0.58189740618405350059 0.49552975260854870143 0.41180257365439409956 0.2352531552534907755 -0.58936454228807511058 0.26410149606565019864 -0.08177858521094619193 -0.63151362769315255719 -0.043789077129014794543 0.44046727409167518719];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.333333333333333;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
